<?xml version="1.0" encoding="UTF-8"?>
	<!-- 
  
 		 Project code: ITPR003456
  		 Author:Z120851
  	 	 This Xml file  is being upgraded from Spring security 2 to Spring security 3 so that
  	 	 expression based security can be used 
  	 	 XSD details upgrades and syntex upgrades for Spring security 3
	 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:cache="http://www.springmodules.org/schema/oscache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	       http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		   http://www.springframework.org/schema/jee 
           http://www.springframework.org/schema/jee/spring-jee-3.1.xsd  
           http://www.springframework.org/schema/aop 
           http://www.springframework.org/schema/aop/spring-aop-3.1.xsd 
           http://www.springmodules.org/schema/oscache 
           http://www.springmodules.org/schema/cache/springmodules-oscache.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.1.xsd">


	<!--
		<security:http auto-config="false"
		access-denied-page="/non_secure/page/loginMain.jspx"
		lowercase-comparisons="false" session-fixation-protection="none">
		<security:intercept-url pattern="/secure/**/*.jspx"
		access="ROLE_REBCR_EDIT_ALL, ROLE_REBCR_VIEW_ALL,ROLE_REBCR_VIEW_CLNT"
		/> <security:intercept-url pattern="/secure/**/*.iface"
		access="ROLE_REBCR_EDIT_ALL,ROLE_REBCR_VIEW_ALL, ROLE_REBCR_VIEW_CLNT"
		/> <security:intercept-url pattern="/*.jspx"
		access="IS_AUTHENTICATED_ANONYMOUSLY" /> <security:intercept-url
		pattern="/*.iface" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<security:form-login login-page="/login.jsp"
		authentication-failure-url="/non_secure/page/loginMain.jspx?error=true"
		login-processing-url="/j_spring_security_check" /> <security:logout />
		<security:http-basic /> <security:anonymous /> </security:http>
	-->
	<!-- 
  
 		 Project code: ITPR003456
  		 Author:Z120851
  	 	 Role templates Upgradation
	 -->
<!-- entries started for ITPR004674 -Defect-1599 (Requirement (7.2)) multiple login
 added default page as login and set to always go there, removed index.jsp as default page-->
	<security:http use-expressions="true" auto-config="false" 
		access-denied-page="/non_secure/page/loginMain.xhtml">	
		<security:expression-handler ref="regSecurityExpressionHandler" />
		<security:intercept-url pattern="/secure/**/*.xhtml"
			access="hasSecurityRole('ROLE_REBCR_EDIT_ALL,ROLE_REBCR_VIEW_ALL,ROLE_REBCR_VIEW_CLNT')" />
		<security:intercept-url pattern="/secure/**/*.faces"
			access="hasSecurityRole('ROLE_REBCR_EDIT_ALL,ROLE_REBCR_VIEW_ALL,ROLE_REBCR_VIEW_CLNT')" />
		<!-- <security:intercept-url pattern="/*.xhtml"
			access="IS_AUTHENTICATED_ANONYMOUSLY" /> -->
		<security:intercept-url pattern="/*.faces"
			access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<security:form-login login-page="/login.xhtml"
			authentication-failure-url="/non_secure/page/loginMain.xhtml?error=true"
			login-processing-url="/j_spring_security_check" 
			default-target-url="/login.xhtml" always-use-default-target="true"/>
		<security:logout />
		<security:http-basic />
	</security:http>
<!-- entries started for ITPR004674 -Defect-1599 (Requirement (7.2)) multiple login-->   

	<!--
		global security filter to allow only certain roles to access these
		methods
	-->

	<security:global-method-security>
		<security:expression-handler ref="regSecurityExpressionHandler" />
		<security:protect-pointcut expression="execution(* *.dao.impl.*insert*(..))"
			access="hasSecurityRole('ROLE_REBCR_EDIT_ALL,ROLE_REBCR_VIEW_ALL')" />
		<security:protect-pointcut expression="execution(* *.dao.impl.*update*(..))"
			access="hasSecurityRole('ROLE_REBCR_EDIT_ALL,ROLE_REBCR_VIEW_ALL')" />
		<security:protect-pointcut expression="execution(* *.dao.impl.*add*(..))"
			access="hasSecurityRole('ROLE_REBCR_EDIT_ALL,ROLE_REBCR_VIEW_ALL')" />
		<security:protect-pointcut expression="execution(* *.dao.impl.*delete*(..))"
			access="hasSecurityRole('ROLE_REBCR_EDIT_ALL,ROLE_REBCR_VIEW_ALL')" />
		<security:protect-pointcut expression="execution(* *.dao.impl.*remove*(..))"
			access="hasSecurityRole('ROLE_REBCR_EDIT_ALL,ROLE_REBCR_VIEW_ALL')" />
		<security:protect-pointcut expression="execution(* *.dao.impl.*change*(..))"
			access="hasSecurityRole('ROLE_REBCR_EDIT_ALL,ROLE_REBCR_VIEW_ALL')" />
		<security:protect-pointcut expression="execution(* *.dao.impl.*merge*(..))"
			access="hasSecurityRole('ROLE_REBCR_EDIT_ALL,ROLE_REBCR_VIEW_ALL')" />
		<security:protect-pointcut expression="execution(* *.dao.impl.*copy*(..))"
			access="hasSecurityRole('ROLE_REBCR_EDIT_ALL,ROLE_REBCR_VIEW_ALL')" />
	</security:global-method-security>


	<!--
		<security:global-method-security> <security:protect-pointcut
		expression="execution(* *.dao.impl.*insert*(..))"
		access="ROLE_REBCR_EDIT_ALL" /> <security:protect-pointcut
		expression="execution(* *.dao.impl.*update*(..))"
		access="ROLE_REBCR_EDIT_ALL" /> <security:protect-pointcut
		expression="execution(* *.dao.impl.*add*(..))"
		access="ROLE_REBCR_EDIT_ALL" /> <security:protect-pointcut
		expression="execution(* *.dao.impl.*delete*(..))"
		access="ROLE_REBCR_EDIT_ALL" /> <security:protect-pointcut
		expression="execution(* *.dao.impl.*remove*(..))"
		access="ROLE_REBCR_EDIT_ALL" /> <security:protect-pointcut
		expression="execution(* *.dao.impl.*change*(..))"
		access="ROLE_REBCR_EDIT_ALL" /> <security:protect-pointcut
		expression="execution(* *.dao.impl.*merge*(..))"
		access="ROLE_REBCR_EDIT_ALL" /> <security:protect-pointcut
		expression="execution(* *.dao.impl.*copy*(..))"
		access="ROLE_REBCR_EDIT_ALL" /> </security:global-method-security>
	-->
<!-- entries started for ITPR004674 -Defect-1599 (Requirement (7.2)) multiple login added person class to get user first and last name-->   
	<security:authentication-manager>
		<security:ldap-authentication-provider
			server-ref="enterprise_ldap" group-role-attribute="${+ldapGroupRoleAttr}"
			group-search-filter="${+ldapGroupSearchFilter}" group-search-base="${+ldapGroupSearchBase}"
			user-search-filter="${+ldapUserSearchFilter}" user-search-base="${+ldapUserSearchBase}"
			user-details-class="person" >
		</security:ldap-authentication-provider>
	</security:authentication-manager>
<!-- entries stooped for ITPR004674 -Defect-1599 (Requirement (7.2)) multiple login-->  
	<!-- 	
	<security:ldap-server id="corp_ldap" url="${+ldapUrl}" manager-dn="uid=SVCS-REBATE-Read,ou=service-accounts,ou=people,o=CVSCore,dc=cvs,dc=com" manager-password="svcsRebate1"/>
	-->
	<bean id="enterprise_ldap"	class="org.springframework.security.ldap.DefaultSpringSecurityContextSource">
		<constructor-arg>
			<jee:jndi-lookup jndi-name="JNDI/apps/rebates/rebate.ldap.url" />
		</constructor-arg>
		<property name="userDn">
			<jee:jndi-lookup jndi-name="JNDI/apps/rebates/rebate.ldap.service.id" />
		</property>
		<property name="password">
			<jee:jndi-lookup jndi-name="JNDI/apps/rebates/rebate.ldap.service.password" />
		</property>
	</bean>
	<!-- 
  
 		 Project code: ITPR003456
  		 Author:Z120851
  	 	Custom expression handler is used to handle multiple Clients (CVS,Aetna) Support 
	 -->
	<bean id="regSecurityExpressionHandler"
		class="com.cvs.caremark.rebates.util.RebSecurityExpressionHandler" >
		<property name="appRoleName" value="ROLE_REBCR"/>
	</bean>	

	<!--
		<security:ldap-authentication-provider server-ref="corp_ldap"
		group-role-attribute="${+ldapGroupRoleAttr}"
		group-search-filter="${+ldapGroupSearchFilter}"
		group-search-base="${+ldapGroupSearchBase}"
		user-search-filter="${+ldapUserSearchFilter}"
		user-search-base="${+ldapUserSearchBase}">
		</security:ldap-authentication-provider> <security:ldap-server
		id="corp_ldap" url="${+ldapUrl}" />
	-->
	<bean id="configurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="placeholderPrefix" value="${+" />
		<property name="properties">
			<bean class="java.util.Properties">
				<constructor-arg>
					<map>
						<entry key="ldapGroupRoleAttr">
							<jee:jndi-lookup
								jndi-name="JNDI/apps/rebates/rebate.ldap.group.role.attribute" />
						</entry>
						<entry key="ldapGroupSearchFilter">
							<jee:jndi-lookup
								jndi-name="JNDI/apps/rebates/rebate.ldap.group.search.filter" />
						</entry>
						<entry key="ldapGroupSearchBase">
							<jee:jndi-lookup
								jndi-name="JNDI/apps/rebates/rebate.ldap.group.search.base" />
						</entry>
						<entry key="ldapUserSearchFilter">
							<jee:jndi-lookup
								jndi-name="JNDI/apps/rebates/rebate.ldap.user.search.filter" />
						</entry>
						<entry key="ldapUserSearchBase">
							<jee:jndi-lookup jndi-name="JNDI/apps/rebates/rebate.ldap.user.search.base" />
						</entry>
					</map>
				</constructor-arg>
			</bean>
		</property>
	</bean>
	<!-- environment constants -->
	<bean id="envConstants" class="com.cvs.caremark.rebates.cr.util.EnvironmentConstants">
		<property name="enetrPriseSelfServiceURL">
			<jee:jndi-lookup jndi-name="JNDI/apps/rebates/enterprise.self.service.password.url"/> 
		</property>
	</bean>


	<!--
		<beans:bean id="contextSource"
		class="org.springframework.security.ldap.DefaultSpringSecurityContextSource">
		<beans:constructor-arg value="ldap://172.19.5.132:3299"/>
		<beans:property name="userDn"
		value="hradmin,ou=Employees,ou=Internal,ou=DEV,o=People,o=Corp,c=US"/>
		<beans:property name="password" value="hradmin"/> </beans:bean>

		<beans:bean id="userSearch"
		class="org.springframework.security.ldap.search.FilterBasedLdapUserSearch">
		<beans:constructor-arg index="0"
		value="ou=Internal,ou=DEV,o=People,o=Corp,c=US"/>
		<beans:constructor-arg index="1" value="(uid={0})"/>
		<beans:constructor-arg index="2" ref="contextSource" /> </beans:bean>

		<beans:bean id="ldapAuthProvider"
		class="org.springframework.security.providers.ldap.LdapAuthenticationProvider">
		<beans:constructor-arg> <beans:bean
		class="org.springframework.security.providers.ldap.authenticator.BindAuthenticator">
		<beans:constructor-arg ref="contextSource"/> <beans:property
		name="userSearch" ref="userSearch"/> </beans:bean>
		</beans:constructor-arg> <beans:constructor-arg> <beans:bean
		class="org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator">
		<beans:constructor-arg ref="contextSource"/> <beans:constructor-arg
		value="ou=Groups,ou=DEV,o=People,o=Corp,c=US"/> <beans:property
		name="groupRoleAttribute" value="cn"/> <beans:property
		name="groupSearchFilter" value="(uniqueMember={0})"/> </beans:bean>
		</beans:constructor-arg> </beans:bean>
	-->
</beans>