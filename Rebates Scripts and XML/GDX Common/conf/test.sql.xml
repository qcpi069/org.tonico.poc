<statements>
	
	<property name="schema" value="ba001"/>
	
		
	<!-- Generic statements -->
	<group name="Generic">
		
		<statement name="SELECT_CURRENT_TIME"><![CDATA[
			SELECT SYSDATE FROM DUAL
		]]></statement>
		
	</group>
	
	<!-- Statements used by com.caremark.gdx.rateload.dao.FileExportConfigDAOOracle -->
	<group name="FileExportConfig">
		
		<statement name="SELECT_NEXT_SEQUENCE_NUMBER"><![CDATA[
			SELECT SEQ_NB, MOD_DT, SYSDATE AS CUR_DT
			FROM ${schema}.POS_FILE_XPRT
			WHERE PTFM_ID=? AND XPRT_TYP_ID=?
		]]></statement>
		<statement name="SELECT_LAST_RUN_DATE"><![CDATA[
			SELECT LAST_RUN_DT
			FROM ${schema}.POS_FILE_XPRT
			WHERE PTFM_ID=? AND XPRT_TYP_ID=?
		]]></statement>
		<statement name="UPDATE_LAST_RUN_DATE"><![CDATA[
			UPDATE POS_FILE_XPRT
			SET LAST_RUN_DT=?, MOD_DT=SYSDATE
			WHERE PTFM_ID=? AND XPRT_TYP_ID=?
		]]></statement>
		
	</group>
	
	<!-- Statements for clearing various tables -->
	<group name="ManufacturerFileLoad">

		<statement name="CLEAR_LOAD_ERRORS"><![CDATA[
			DELETE FROM ${schema}.MFG_LOAD_ERR WHERE LOAD_TBL_ID=?
		]]></statement>
		<statement name="INSERT_LOAD_ERROR"><![CDATA[
			INSERT INTO ${schema}.MFG_LOAD_ERR
			VALUES (?,?,SUBSTR(?,1,100),SUBSTR(?,1,350))
		]]></statement>

		<group name="CLEAR">
			<statement name="MFG_RATE_LOAD"><![CDATA[
				TRUNCATE TABLE ${schema}.MFG_RATE_LOAD
			]]></statement>
			<statement name="MFG_PMCY_EXCL_LOAD"><![CDATA[
				TRUNCATE TABLE ${schema}.MFG_PMCY_EXCL_LOAD
			]]></statement>
			<statement name="MFG_ST_EXCL_LOAD"><![CDATA[
				TRUNCATE TABLE ${schema}.MFG_ST_EXCL_LOAD
			]]></statement>
		</group>

		<group name="SELECT_ERROR_COUNT">
			
			<statement name="MFG_RATE_LOAD"><![CDATA[
				SELECT SUM(count) FROM (
						SELECT COUNT(*) AS count
						FROM ${schema}.MFG_RATE_LOAD
						WHERE ERR_TXT IS NOT NULL
					UNION ALL
						SELECT COUNT(*) AS count
						FROM ${schema}.MFG_LOAD_ERR
						WHERE LOAD_TBL_ID='MFG_RATE_LOAD'
				)
			]]></statement>
			
			<statement name="MFG_PMCY_EXCL_LOAD"><![CDATA[
				SELECT SUM(count) FROM (
						SELECT COUNT(*) AS count
						FROM ${schema}.MFG_PMCY_EXCL_LOAD
						WHERE ERR_TXT IS NOT NULL
					UNION ALL
						SELECT COUNT(*) AS count
						FROM ${schema}.MFG_LOAD_ERR
						WHERE LOAD_TBL_ID='MFG_PMCY_EXCL_LOAD'
				)
			]]></statement>
			<statement name="MFG_ST_EXCL_LOAD"><![CDATA[
				SELECT SUM(count) FROM (
						SELECT COUNT(*) AS count
						FROM ${schema}.MFG_ST_EXCL_LOAD
						WHERE ERR_TXT IS NOT NULL
					UNION ALL
						SELECT COUNT(*) AS count
						FROM ${schema}.MFG_LOAD_ERR
						WHERE LOAD_TBL_ID='MFG_ST_EXCL_LOAD'
				)
			]]></statement>
		</group>

		<group name="SELECT_VALID_COUNT">
			<statement name="MFG_RATE_LOAD"><![CDATA[
				SELECT COUNT(*)
				FROM ${schema}.MFG_RATE_LOAD
				WHERE ERR_TXT IS NULL
			]]></statement>
			<statement name="MFG_PMCY_EXCL_LOAD"><![CDATA[
				SELECT COUNT(*)
				FROM ${schema}.MFG_PMCY_EXCL_LOAD
				WHERE ERR_TXT IS NULL
			]]></statement>
			<statement name="MFG_ST_EXCL_LOAD"><![CDATA[
				SELECT COUNT(*)
				FROM ${schema}.MFG_ST_EXCL_LOAD
				WHERE ERR_TXT IS NULL
			]]></statement>
		</group>

		<group name="SELECT_ERRORS">
			<statement name="MFG_RATE_LOAD"><![CDATA[
				SELECT
					LINE_NB,
					('"' || ERR_TXT || '"') ERR_TXT,
					DATA_TXT
				FROM ${schema}.MFG_LOAD_ERR
				WHERE LOAD_TBL_ID = 'MFG_RATE_LOAD'
			
				UNION ALL
			
				SELECT
					LINE_NB,
					('"' || ERR_TXT || '"') ERR_TXT, (
						PICO_ID || ',' ||
						FRMLY_ID || ',' ||
						FRMLY_SRC_CD || ',' ||
						NDC11_ID || ',' ||
						EFF_DT || ',' ||
						TERM_DT || ',' ||
						RATE_QLFR_CD || ',' ||
						MAIL_RATE_T2_AMT || ',' ||
						MAIL_RATE_T3_AMT || ',' ||
						RTL_RATE_T2_AMT || ',' ||
						RTL_RATE_T3_AMT || ',' ||
						EXCL_MAIL_CD || ',' ||
						EXCL_THER_CD
					) DATA_TXT
				FROM ${schema}.MFG_RATE_LOAD
				WHERE ERR_TXT IS NOT NULL
				ORDER BY LINE_NB
			]]></statement>
			<statement name="MFG_PMCY_EXCL_LOAD"><![CDATA[
				SELECT
					LINE_NB,
					('"' || ERR_TXT || '"') ERR_TXT,
					DATA_TXT
				FROM ${schema}.MFG_LOAD_ERR
				WHERE LOAD_TBL_ID = 'MFG_PMCY_EXCL_LOAD'
			
				UNION ALL
			
				SELECT
					LINE_NB,
					('"' || ERR_TXT || '"') ERR_TXT, (
						PICO_ID || ',' ||
						EFF_DT || ',' ||
						TERM_DT || ',' ||
						PMCY_ID || ',' ||
						PGM_CD
					) DATA_TXT
				FROM ${schema}.MFG_PMCY_EXCL_LOAD
				WHERE ERR_TXT IS NOT NULL
				ORDER BY LINE_NB
			]]></statement>
			<statement name="MFG_ST_EXCL_LOAD"><![CDATA[
				SELECT
					LINE_NB,
					('"' || ERR_TXT || '"') ERR_TXT,
					DATA_TXT
				FROM ${schema}.MFG_LOAD_ERR
				WHERE LOAD_TBL_ID = 'MFG_ST_EXCL_LOAD'
			
				UNION ALL
			
				SELECT
					LINE_NB,
					('"' || ERR_TXT || '"') ERR_TXT, (
						PICO_ID || ',' ||
						EFF_DT || ',' ||
						TERM_DT || ',' ||
						ST_CD || ',' ||
						PGM_CD
					) DATA_TXT
				FROM ${schema}.MFG_ST_EXCL_LOAD
				WHERE ERR_TXT IS NOT NULL
				ORDER BY LINE_NB
			]]></statement>
		</group>
	</group>
	
	<!-- Statements used by com.caremark.gdx.rateload.dao.ManufacturerRateFileLoadDAOOracle -->
	<group name="ManufacturerRateFileLoad">
		<statement name="INSERT_RATE_LOAD"><![CDATA[
			INSERT INTO ${schema}.MFG_RATE_LOAD
			VALUES(?,NULL,?,?,?,?,?,?,?,?,?,?,?,?,?)
		]]></statement>
		<statement name="SELECT_LOAD_RECORDS"><![CDATA[
			SELECT r1.*
			FROM ${schema}.MFG_RATE_LOAD r1, ${schema}.MFG_RATE r2
			WHERE
				r1.ERR_TXT IS NULL AND
				r1.PICO_ID  = r2.PICO_ID(+)  AND
				r1.FRMLY_ID = r2.FRMLY_ID(+) AND
				r1.NDC11_ID = r2.NDC11_ID(+) AND
				r1.EFF_DT   = r2.EFF_DT(+)   AND (
					(
						r1.FRMLY_SRC_CD     != r2.FRMLY_SRC_CD OR
						r1.TERM_DT          != r2.TERM_DT OR
						r1.RATE_QLFR_CD     != r2.RATE_QLFR_CD OR
						r1.MAIL_RATE_T2_AMT != r2.MAIL_RATE_T2_AMT OR
						r1.MAIL_RATE_T3_AMT != r2.MAIL_RATE_T3_AMT OR
						r1.RTL_RATE_T2_AMT  != r2.RTL_RATE_T2_AMT OR
						r1.RTL_RATE_T3_AMT  != r2.RTL_RATE_T3_AMT OR
						r1.EXCL_MAIL_CD     != r2.EXCL_MAIL_CD OR
						r1.EXCL_THER_CD     != r2.EXCL_THER_CD
					) OR (
						r2.PICO_ID IS NULL
					)
				)
		]]></statement>
		<group name="VALIDATE">
			<statement name="TERM_LESS_THAN_EFFECTIVE"><![CDATA[
				UPDATE ${schema}.MFG_RATE_LOAD
				SET ERR_TXT = 'Term date is less than effective date'
				WHERE TERM_DT < EFF_DT
			]]></statement>
			<statement name="OVERLAPPING_TERM_EFF_DATES"><![CDATA[
				UPDATE ${schema}.MFG_RATE_LOAD
				SET ERR_TXT = 'Overlapping term and effective dates'
				WHERE LINE_NB IN (
					SELECT r1.LINE_NB
					FROM ${schema}.MFG_RATE_LOAD r1, ${schema}.MFG_RATE_LOAD r2
					WHERE
						r1.PICO_ID  = r2.PICO_ID AND
						r1.FRMLY_ID = r2.FRMLY_ID AND
						r1.NDC11_ID = r2.NDC11_ID AND (
							(
								r2.EFF_DT <= r1.TERM_DT AND
								r2.EFF_DT >= r1.EFF_DT
							)
							OR (
								r2.TERM_DT <= r1.TERM_DT AND
								r2.TERM_DT >= r1.EFF_DT
							)
						)
						AND r1.LINE_NB != r2.LINE_NB
				)
			]]></statement>
			<statement name="INVALID_RATES"><![CDATA[
				UPDATE ${schema}.MFG_RATE_LOAD
				SET ERR_TXT = 'Invalid rates'
				WHERE (
					RATE_QLFR_CD = 'P' AND (
						0 >= ANY (MAIL_RATE_T2_AMT, MAIL_RATE_T3_AMT, RTL_RATE_T2_AMT, RTL_RATE_T3_AMT) OR
						100 < ANY (MAIL_RATE_T2_AMT, MAIL_RATE_T3_AMT, RTL_RATE_T2_AMT, RTL_RATE_T3_AMT)
					)
				) OR (
					RATE_QLFR_CD = 'F' AND
					0 >= ANY (MAIL_RATE_T2_AMT, MAIL_RATE_T3_AMT, RTL_RATE_T2_AMT, RTL_RATE_T3_AMT)
				)
			]]></statement>
			<statement name="KEY_FIELDS_NOT_UNIQUE"><![CDATA[
				UPDATE ${schema}.MFG_RATE_LOAD
				SET ERR_TXT = 'Key fields are not unique'
				WHERE LINE_NB IN (
					SELECT t1.LINE_NB
					FROM ${schema}.MFG_RATE_LOAD t1, (
						SELECT PICO_ID, FRMLY_ID, NDC11_ID, EFF_DT, COUNT(*)
						FROM ${schema}.MFG_RATE_LOAD
						GROUP BY PICO_ID, FRMLY_ID, NDC11_ID, EFF_DT
						HAVING COUNT(*) > 1
					) t2
					WHERE
						t1.PICO_ID  = t2.PICO_ID AND
						t1.FRMLY_ID = t2.FRMLY_ID AND
						t1.NDC11_ID = t2.NDC11_ID AND
						t1.EFF_DT   = t2.EFF_DT
				)
			]]></statement>
			<statement name="MISSING_DATA"><![CDATA[
				INSERT INTO ${schema}.MFG_RATE_LOAD
				SELECT
					-1, 'Missing file data', r1.PICO_ID, r1.FRMLY_ID, NULL, r1.NDC11_ID,
					r1.EFF_DT, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL
				FROM ${schema}.MFG_RATE r1, MFG_RATE_LOAD r2
				WHERE
					r1.PICO_ID  = r2.PICO_ID(+)  AND
					r1.FRMLY_ID = r2.FRMLY_ID(+) AND
					r1.NDC11_ID = r2.NDC11_ID(+) AND
					r1.EFF_DT   = r2.EFF_DT(+)   AND
					r2.PICO_ID IS NULL
			]]></statement>
		</group>
	</group>

	<group name="PharmacyExclusionsFileLoad">
		
		<statement name="INSERT_PHARMACY_LOAD"><![CDATA[
			INSERT INTO ${schema}.MFG_PMCY_EXCL_LOAD
			VALUES(?,NULL,?,?,?,?,?)
		]]></statement>
		<statement name="SELECT_LOAD_RECORDS"><![CDATA[
			SELECT r1.*
			FROM ${schema}.MFG_PMCY_EXCL_LOAD r1, ${schema}.MFG_PMCY_EXCL r2
			WHERE
				r1.ERR_TXT IS NULL AND
				r1.PICO_ID = r2.PICO_ID(+) AND
				r1.PMCY_ID = r2.PMCY_ID(+) AND
				r1.PGM_CD  = r2.PGM_CD(+)  AND
				r1.EFF_DT  = r2.EFF_DT(+)  AND (
					(
						r1.PMCY_ID != r2.PMCY_ID OR
						r1.PGM_CD  != r2.PGM_CD OR
						r1.TERM_DT    != r2.TERM_DT
					) OR (
						r2.PICO_ID IS NULL
					)
				)
		]]></statement>
		<statement name="SELECT_LOAD_RECORDS"><![CDATA[
			SELECT r1.*
			FROM ${schema}.MFG_PMCY_EXCL_LOAD r1, ${schema}.MFG_PMCY_EXCL r2
			WHERE
				r1.ERR_TXT IS NULL AND
				r1.PICO_ID = r2.PICO_ID(+) AND
				r1.PMCY_ID = r2.PMCY_ID(+) AND
				r1.PGM_CD  = r2.PGM_CD(+)  AND
				r1.EFF_DT  = r2.EFF_DT(+)  AND (
					(
						r1.PMCY_ID != r2.PMCY_ID OR
						r1.PGM_CD  != r2.PGM_CD OR
						r1.TERM_DT    != r2.TERM_DT
					) OR (
						r2.PICO_ID IS NULL
					)
				)
		]]></statement>
		
		<group name="VALIDATE">
			<statement name="TERM_LESS_THAN_EFFECTIVE"><![CDATA[
				UPDATE ${schema}.MFG_PMCY_EXCL_LOAD
				SET ERR_TXT = 'Term date is less than effective date'
				WHERE TERM_DT < EFF_DT
			]]></statement>
			<statement name="OVERLAPPING_TERM_EFF_DATES"><![CDATA[
				UPDATE ${schema}.MFG_PMCY_EXCL_LOAD
				SET ERR_TXT = 'Overlapping term and effective dates'
				WHERE LINE_NB IN (
					SELECT r1.LINE_NB
					FROM ${schema}.MFG_PMCY_EXCL_LOAD r1, ${schema}.MFG_PMCY_EXCL_LOAD r2
					WHERE
						r1.PICO_ID = r2.PICO_ID AND
						r1.PMCY_ID = r2.PMCY_ID AND
						r1.PGM_CD = r2.PGM_CD AND (
							(
								r2.EFF_DT <= r1.TERM_DT AND
								r2.EFF_DT >= r1.EFF_DT
							)
							OR (
								r2.TERM_DT <= r1.TERM_DT AND
								r2.TERM_DT >= r1.EFF_DT
							)
						)
						AND r1.LINE_NB != r2.LINE_NB
				)
			]]></statement>
			<statement name="KEY_FIELDS_NOT_UNIQUE"><![CDATA[
				UPDATE ${schema}.MFG_PMCY_EXCL_LOAD
				SET ERR_TXT = 'Key fields are not unique'
				WHERE LINE_NB IN (
					SELECT t1.LINE_NB
					FROM ${schema}.MFG_PMCY_EXCL_LOAD t1, (
						SELECT PICO_ID, PMCY_ID,PGM_CD, EFF_DT, COUNT(*)
						FROM ${schema}.MFG_PMCY_EXCL_LOAD
						GROUP BY PICO_ID, PMCY_ID,PGM_CD, EFF_DT
						HAVING COUNT(*) > 1
					) t2
					WHERE
						t1.PICO_ID = t2.PICO_ID AND
						t1.PMCY_ID = t2.PMCY_ID AND
						t1.PGM_CD  = t2.PGM_CD AND
						t1.EFF_DT  = t2.EFF_DT
				)
			]]></statement>
			<statement name="MISSING_DATA"><![CDATA[
				INSERT INTO ${schema}.MFG_PMCY_EXCL_LOAD
				SELECT
					-1, 'Missing file data', r1.PICO_ID, r1.PMCY_ID, r1.PGM_CD,
					r1.EFF_DT, NULL
				FROM ${schema}.MFG_PMCY_EXCL r1, ${schema}.MFG_PMCY_EXCL_LOAD r2
				WHERE
					r1.PICO_ID = r2.PICO_ID(+) AND
					r1.PMCY_ID = r2.PMCY_ID(+) AND
					r1.PGM_CD  = r2.PGM_CD(+)  AND
					r1.EFF_DT  = r2.EFF_DT(+)  AND
					r2.PICO_ID IS NULL
			]]></statement>
		</group>
		
	</group>
	

	<group name="StateExclusionsFileLoad">
		
		<statement name="INSERT_STATE_LOAD"><![CDATA[
			INSERT INTO ${schema}.MFG_ST_EXCL_LOAD
			VALUES(?,NULL,?,?,?,?,?)
		]]></statement>
		<statement name="SELECT_LOAD_RECORDS"><![CDATA[
			SELECT r1.*
			FROM ${schema}.MFG_ST_EXCL_LOAD r1, ${schema}.MFG_ST_EXCL r2
			WHERE
				r1.ERR_TXT IS NULL AND
				r1.PICO_ID = r2.PICO_ID(+) AND
				r1.ST_CD   = r2.ST_CD(+)   AND
				r1.PGM_CD  = r2.PGM_CD(+)  AND
				r1.EFF_DT  = r2.EFF_DT(+)  AND (
					(
						r1.ST_CD   != r2.ST_CD OR
						r1.PGM_CD  != r2.PGM_CD OR
						r1.TERM_DT != r2.TERM_DT
					) OR (
						r2.PICO_ID IS NULL
					)
				)
		]]></statement>
		<statement name="SELECT_LOAD_RECORDS"><![CDATA[
			SELECT r1.*
			FROM ${schema}.MFG_PMCY_EXCL_LOAD r1, ${schema}.MFG_PMCY_EXCL r2
			WHERE
				r1.ERR_TXT IS NULL AND
				r1.PICO_ID = r2.PICO_ID(+) AND
				r1.PMCY_ID = r2.PMCY_ID(+) AND
				r1.PGM_CD  = r2.PGM_CD(+)  AND
				r1.EFF_DT  = r2.EFF_DT(+)  AND (
					(
						r1.PMCY_ID != r2.PMCY_ID OR
						r1.PGM_CD  != r2.PGM_CD OR
						r1.TERM_DT    != r2.TERM_DT
					) OR (
						r2.PICO_ID IS NULL
					)
				)
		]]></statement>
		
		<group name="VALIDATE">
			<statement name="TERM_LESS_THAN_EFFECTIVE"><![CDATA[
				UPDATE ${schema}.MFG_ST_EXCL_LOAD
				SET ERR_TXT = 'Term date is less than effective date'
				WHERE TERM_DT < EFF_DT
			]]></statement>
			<statement name="OVERLAPPING_TERM_EFF_DATES"><![CDATA[
				UPDATE ${schema}.MFG_ST_EXCL_LOAD
				SET ERR_TXT = 'Overlapping term and effective dates'
				WHERE LINE_NB IN (
					SELECT r1.LINE_NB
					FROM ${schema}.MFG_ST_EXCL_LOAD r1, ${schema}.MFG_ST_EXCL_LOAD r2
					WHERE
						r1.PICO_ID = r2.PICO_ID AND
						r1.PGM_CD = r2.PGM_CD AND
						r1.ST_CD = r2.ST_CD AND (
							(
								r2.EFF_DT <= r1.TERM_DT AND
								r2.EFF_DT >= r1.EFF_DT
							)
							OR (
								r2.TERM_DT <= r1.TERM_DT AND
								r2.TERM_DT >= r1.EFF_DT
							)
						)
						AND r1.LINE_NB != r2.LINE_NB
				)
			]]></statement>
			<statement name="MISSING_DATA"><![CDATA[
				INSERT INTO ${schema}.MFG_ST_EXCL_LOAD
				SELECT
					-1, 'Missing file data', r1.PICO_ID, r1.ST_CD,
					r1.PGM_CD, r1.EFF_DT, NULL
				FROM ${schema}.MFG_ST_EXCL r1, ${schema}.MFG_ST_EXCL_LOAD r2
				WHERE
					r1.PICO_ID = r2.PICO_ID(+) AND
					r1.ST_CD   = r2.ST_CD(+)   AND
					r1.PGM_CD  = r2.PGM_CD(+)  AND
					r1.EFF_DT  = r2.EFF_DT(+)  AND
					r2.PICO_ID IS NULL
			]]></statement>
			<statement name="KEY_FIELDS_NOT_UNIQUE"><![CDATA[
				UPDATE ${schema}.MFG_ST_EXCL_LOAD
				SET ERR_TXT = 'Key fields are not unique'
				WHERE LINE_NB IN (
					SELECT t1.LINE_NB
					FROM ${schema}.MFG_ST_EXCL_LOAD t1, (
						SELECT PICO_ID, ST_CD, PGM_CD, EFF_DT, COUNT(*)
						FROM ${schema}.MFG_ST_EXCL_LOAD
						GROUP BY PICO_ID, ST_CD, PGM_CD, EFF_DT
						HAVING COUNT(*) > 1
					) t2
					WHERE
						t1.PICO_ID = t2.PICO_ID AND
						t1.ST_CD   = t2.ST_CD AND
						t1.PGM_CD  = t2.PGM_CD AND
						t1.EFF_DT  = t2.EFF_DT
				)
			]]></statement>
		</group>
		
	</group>
	
	<group name="RebatePharmacyExcl">
		<statement name="SELECT_ROW"><![CDATA[
			SELECT PICO_ID, PMCY_ID, PGM_CD, EFF_DT, TERM_DT, ADD_DT, MOD_DT
			FROM ${schema}.MFG_PMCY_EXCL
			WHERE
				PICO_ID = ? AND
				PMCY_ID = ? AND
				PGM_CD = ? AND
				EFF_DT = ?
		]]></statement>
		<statement name="INSERT_HIST_RECORD"><![CDATA[
			INSERT INTO ${schema}.HISTORY_MFG_PMCY_EXCL
			VALUES(?,?,?,?,?,?,SYSDATE)
		]]></statement>
		<statement name="INSERT_RECORD"><![CDATA[
			INSERT INTO ${schema}.MFG_PMCY_EXCL
			VALUES(?,?,?,?,?,?,?)
		]]></statement>
	</group>
	
	
	<group name="RebateRateRecord">
		<statement name="SELECT_ROW"><![CDATA[
			SELECT PICO_ID, FRMLY_ID, FRMLY_SRC_CD, NDC11_ID, EFF_DT,
				TERM_DT, RATE_QLFR_CD, MAIL_RATE_T2_AMT, MAIL_RATE_T3_AMT
				RTL_RATE_T2_AMT, RTL_RATE_T3_AMT, EXCL_MAIL_CD, EXCL_THER_CD,
				ADD_DT, MOD_DT
			FROM ${schema}.MFG_RATE
			WHERE
				PICO_ID = ? AND
				FRMLY_ID = ? AND
				NDC11_ID = ? AND
				EFF_DT = ?
		]]></statement>
		<statement name="INSERT_HIST_RECORD"><![CDATA[
			INSERT INTO ${schema}.HISTORY_MFG_RATE
			VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE)
		]]></statement>
		<statement name="INSERT_RECORD"><![CDATA[
			INSERT INTO ${schema}.MFG_RATE
			VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
		]]></statement>
	</group>
	
	<group name="RebateStateExcl">
		<statement name="SELECT_ROW"><![CDATA[
			SELECT PICO_ID, ST_CD, PGM_CD, EFF_DT, TERM_DT, ADD_DT, MOD_DT
			FROM ${schema}.MFG_ST_EXCL
			WHERE
				PICO_ID = ? AND
				ST_CD = ? AND
				PGM_CD = ? AND
				EFF_DT = ?";
		]]></statement>
		<statement name="INSERT_HIST_RECORD"><![CDATA[
			INSERT INTO ${schema}.HISTORY_MFG_ST_EXCL
			VALUES(?,?,?,?,?,?,SYSDATE)
		]]></statement>
		<statement name="INSERT_RECORD"><![CDATA[
			INSERT INTO ${schema}.MFG_ST_EXCL
			VALUES(?,?,?,?,?,?,?)
		]]></statement>
	</group>
	
</statements>