<?xml version="1.0" encoding="UTF-8"?>
<web-app id="WebApp_ID" version="3.0"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
	<display-name>rebate_rci</display-name>

<!-- 	<context-param> -->
<!-- 		<param-name>org.apache.myfaces.EXPRESSION_FACTORY</param-name> -->
<!-- 		<param-value>org.apache.el.ExpressionFactoryImpl</param-value> -->
<!-- 	</context-param> -->

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/spring-config.xml, /WEB-INF/applicationContext-security.xml</param-value>
	</context-param>

	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>uniqueAppRootNamee</param-value>
	</context-param>

	<context-param>
		<param-name>facelets.SKIP_COMMENTS</param-name>
		<param-value>true</param-value>
	</context-param>

	<!-- Facelet Config -->
	<!-- <context-param> <param-name>javax.faces.CONFIG_FILES</param-name> <param-value> 
		/WEB-INF/faces-config.xml </param-value> </context-param> -->

	<context-param>
		<description>
		The location where state information is saved.
Valid values are 'server' (typically saved in HttpSession) and 'client' (typically
saved as a hidden field in the form.
Default is server.</description>
		<param-name>javax.faces.STATE_SAVING_METHOD</param-name>
		<param-value>client</param-value>
	</context-param>
	<context-param>
		<param-name>facelets.DEVELOPMENT</param-name>
		<param-value>true</param-value>
	</context-param>
	<context-param>
		<description>
		The default suffix for extension-mapped resources that contain JSF components.
Default is '.jsp'.</description>
		<param-name>javax.faces.DEFAULT_SUFFIX</param-name>
		<param-value>.xhtml</param-value>
	</context-param>


	<context-param>
		<description>
		A human readable string describing where this particular JSF application is
in the software development lifecycle.
Valid values are 'Development', 'UnitTest', 'SystemTest' and 'Production'.
Default is 'Production'.
This parameter is not available in JSF 1.x.</description>
		<param-name>javax.faces.PROJECT_STAGE</param-name>
		<param-value>Production</param-value>
	</context-param>
	<context-param>
		<description>
		Monitors Faces JSP files for modifications and synchronizes a running server with
the changes without restarting the server. If this parameter is set to false or
removed from the deployment descriptor, any changes made to Faces JSP files may
not be seen by the server until it is restarted. This parameter is usually set
to true while the Faces JSP files are being developed and debugged in order to
improve the performance of the development environment.</description>
		<param-name>com.ibm.ws.jsf.JSP_UPDATE_CHECK</param-name>
		<param-value>true</param-value>
	</context-param>
	<context-param>
		<description>
		Load JSF runtime when the application server starts up. If this parameter is set to false or removed,
JSF runtime will be loaded and initialized when the first JSF request is processed.
This may disable custom JSF extensions, such as factories defined in the project.</description>
		<param-name>com.ibm.ws.jsf.LOAD_FACES_CONFIG_AT_STARTUP</param-name>
		<param-value>true</param-value>
	</context-param>


	<context-param>
		<param-name>javax.servlet.jsp.jstl.fmt.localizationContext</param-name>
		<param-value>com.cvs.caremark.rebates.rci.resources.messages</param-value>
	</context-param>

	<!-- Specifies the amount of time in milliseconds that the bridge will wait 
		for a response from the server for a user-initiated request before declaring 
		the connection lost. Un-comment and change the default value, if necessary. -->
	<context-param>
		<param-name>org.apache.myfaces.CLIENT_VIEW_STATE_TIMEOUT</param-name>
		<param-value>600000</param-value>
	</context-param>

	<context-param>
		<param-name>com.ibm.ws.jsf.fullyRestoreDynamicComponent</param-name>
		<param-value>true</param-value>
	</context-param>
	

	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF/rciLog4j.xml</param-value>
	</context-param>

	<context-param>
		<param-name>log4jExposeWebAppRoot</param-name>
		<param-value>false</param-value>
	</context-param>

	<context-param>
		<!-- Maximum memory per request (in bytes) -->
		<param-name>org.apache.myfaces.trinidad.UPLOAD_MAX_MEMORY</param-name>
		<!-- Use 500K -->
		<param-value>2097152</param-value>
	</context-param>

	<!-- <context-param>
		<param-name>org.apache.myfaces.trinidad.ALTERNATE_VIEW_HANDLER</param-name>
		<param-value>com.sun.facelets.FaceletViewHandler</param-value>
		<param-value>org.apache.myfaces.trinidadinternal.facelets.TrinidadFaceletViewHandler</param-value>
	</context-param>

	<context-param>
		Unfortunately, Facelets provides no hook for plugging the PageResolver 
			into the logic handling "facelets.VIEW_MAPPINGS". You should leave "facelets.VIEW_MAPPINGS" 
			unset and use "org.apache.myfaces.trinidad.FACELETS_VIEW_MAPPINGS" instead.
		<param-name>org.apache.myfaces.trinidad.FACELETS_VIEW_MAPPINGS</param-name>
		<param-value>*.xhtml</param-value>
	</context-param> -->

	<context-param>
		<!-- Maximum disk space per request (in bytes) -->
		<param-name>org.apache.myfaces.trinidad.UPLOAD_MAX_DISK_SPACE</param-name>
		<!-- Use 5,000K -->
		<param-value>2097152</param-value>
	</context-param>
	<context-param>
		<!-- directory to store temporary files -->
		<param-name>org.apache.myfaces.trinidad.UPLOAD_TEMP_DIR</param-name>
		<!-- Use a TrinidadUploads subdirectory of /tmp -->
		<param-value>/appllogs/rebate_rci</param-value>
	</context-param>


	<!-- This filter is always required; one of its functions is file upload. -->
	<filter>
		<filter-name>trinidad</filter-name>
		<filter-class>org.apache.myfaces.trinidad.webapp.TrinidadFilter</filter-class>
	</filter>

	<servlet>
		<servlet-name>resources</servlet-name>
		<servlet-class>org.apache.myfaces.trinidad.webapp.ResourceServlet</servlet-class>
	</servlet>

	<!-- This cannot be configured currently -->
	<servlet-mapping>
		<servlet-name>resources</servlet-name>
		<url-pattern>/adf/*</url-pattern>
	</servlet-mapping>

	<filter>
		<filter-name>MyFacesExtensionsFilter</filter-name>
		<filter-class>org.apache.myfaces.webapp.filter.ExtensionsFilter</filter-class>
		<init-param>
			<description>Set the size limit for uploaded files.
    Format: 10 - 10 bytes
     10k - 10 KB
     10m - 10 MB
     1g - 1 GB
</description>
			<param-name>uploadMaxFileSize</param-name>
			<param-value>20m</param-value>
		</init-param>
		<init-param>
			<description>
    Set the threshold size - files below this limit are stored 
    in memory, files above this limit are stored on disk.
 Format: 10  - 10 bytes
  10k - 10 KB
  10m - 10 MB
  1g  - 1 GB
</description>
			<param-name>uploadThresholdSize</param-name>
			<param-value>100k</param-value>
		</init-param>
		<init-param>
			<description>
    Set the path where the intermediary files will be stored.
</description>
			<param-name>uploadRepositoryPath</param-name>
			<param-value>/temp</param-value>
		</init-param>
	</filter>

	<!-- extension mapping for adding <script/>, <link/>, and other resource 
		tags to JSF-pages -->
	<filter-mapping>
		<filter-name>MyFacesExtensionsFilter</filter-name>
		<!-- servlet-name must match the name of your javax.faces.webapp.FacesServlet 
			entry -->
		<servlet-name>Faces Servlet</servlet-name>
	</filter-mapping>

	<!-- extension mapping for serving page-independent resources (javascript, 
		stylesheets, images, etc.) -->
	<filter-mapping>
		<filter-name>MyFacesExtensionsFilter</filter-name>
		<url-pattern>/faces/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>MyFacesExtensionsFilter</filter-name>
		<url-pattern>*.faces</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>MyFacesExtensionsFilter</filter-name>
		<url-pattern>*.xhtml</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>MyFacesExtensionsFilter</filter-name>
		<url-pattern>*.jspx</url-pattern>
	</filter-mapping>

	<!-- ConfigureListener is not generally required. Due to an apparent bug 
		in Tomcat users have reported seeing the following error "SEVERE: ICEfaces 
		could not initialize JavaServer Faces. Please check that the JSF .jar files 
		are installed correctly.". Specifying the ConfigureListener resolves the 
		issue. <listener> <listener-class>com.sun.faces.config.ConfigureListener</listener-class> 
		</listener> -->
	<filter>
		<!-- <filter-name>springSecurityFilterChain</filter-name> <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class> -->
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.security.util.FilterToBeanProxy</filter-class>
		<init-param>
			<param-name>targetClass</param-name>
			<param-value>
 				org.springframework.security.util.FilterChainProxy
 			</param-value>
		</init-param>
	</filter>

	<filter>
		<filter-name>JpaFilter</filter-name>
		<filter-class>org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>JpaFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- <listener> <listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class> 
		</listener> - -->
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>


	<servlet>
		<servlet-name>Faces Servlet</servlet-name>
		<servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>Faces Servlet</servlet-name>
		<url-pattern>
		*.faces</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>Faces Servlet</servlet-name>
		<url-pattern>
		*.xhtml</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>Faces Servlet</servlet-name>
		<url-pattern>
		/faces/*</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>Faces Servlet</servlet-name>
		<url-pattern>
		*.jspx</url-pattern>
	</servlet-mapping>

	<session-config>
		<session-timeout>60</session-timeout>
	</session-config>

	<!-- Welcome files -->
	<welcome-file-list>
		<welcome-file>index.xhtml</welcome-file>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.faces</welcome-file>
	</welcome-file-list>

	<error-page>
		<exception-type>javax.faces.el.EvaluationException</exception-type>
		<location>/non_secure/page/error.xhtml</location>
	</error-page>

	<error-page>
		<exception-type>javax.faces.FacesException</exception-type>
		<location>/non_secure/page/error.xhtml</location>
	</error-page>

	<resource-ref id="ResourceRef_1270552714124">
		<description>
  		</description>
		<res-ref-name>mySession</res-ref-name>
		<res-type>javax.mail.Session</res-type>
		<res-auth>Container</res-auth>
		<res-sharing-scope>Shareable</res-sharing-scope>
	</resource-ref>
</web-app>
