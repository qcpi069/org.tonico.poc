<!-- Load APC Duplicate Claims within GDX 
     Quarter ID can be passed in as parameter, or will query TCUR_INV_PRD table to find out the current processing quarter.
     Datasource definition file datasource.xml is in the ./java/Common_java_db_interface/conf.

     Parameter 1 : Optional, has year and quarter info. format: "hyphenhyphenquarter  YYYY0Q"  'YYYY': 4 digit year,
                  'Q':quarter number ('1', '2', '3', '4'). Example: hyphenhyphenquarter  200502 ,
                   this should be the parameter passed into XML.
                   Note: hyphenhyphen means the two characters. xml does not allow it in the comments, it is part
                   of the reserved symbols.

     Maestro Command with parameter: ./scripts/Common_java_db_interface.ksh hyphenhyphenquarter 200502 <XML file name>
     Maestro Command without parameter: ./scripts/Common_java_db_interface.ksh <XML file name>
-->

<sqml>
        <property name="TIMEOUT" value="0"/>

        <!-- datasource.xml defines DB connection info. It should be under ./java/Common_java_db_interface/conf-->
        <datasources resource="datasource.xml"/>

        <!-- Set-up a try block to send an email on exception -->
        <command type="try">
        <try>

        <!-- Start Update the GDX APC process status -->
        <command type="run" datasource="gdxprd"><![CDATA[

            update VRAP.TAPC_QTR_PRCS_EVENT  
                SET STRT_TS = CURRENT TIMESTAMP
                   ,END_TS = NULL
                   ,PRCS_ERR_TS = NULL
                   ,PRCS_STAT_TXT='Running'    
                WHERE PRCS_ID = 100;

        ]]></command>
        <!-- End Update the GDX APC process status -->

    <!-- Query DB for current processing quarter info -->
    <command type="run" datasource="gdxdb" rowName="rowQuarter"><![CDATA[

        SELECT CAST(QUARTER_ID AS CHAR(6)) FROM VRAP.TCUR_INV_PRD WITH UR

    ]]></command>

    <!-- Command to set quarter parameters, either from DB or parameter-->
    <command type="java"><![CDATA[

         String quarter ="";

         if (script.getProperty("quarter") == null) {
             quarter = script.getProperty("rowQuarter.1");
             if (quarter == null || quarter.trim().length()== 0){
             // If invalid info from database throw error
             throw new Exception("Processing quarter info not found in database ");
             }
         }
         else { //There is parameter 'quarter' passed in
             quarter = script.getProperty("quarter");
                     if (quarter == null || quarter.trim().length() == 0 || quarter.trim().length() != 6){
                         // If invalid info from database throw error
                         throw new Exception("Invalid quarter ");
                     }
         }
         //Make the variables available to other queries below
         script.setProperty("quarter", quarter);

    ]]></command>

        <!-- delete existing rows within GDX  -->
        <command type="run" datasource="gdxdb" transaction="false"><![CDATA[

                 DELETE 
                   FROM VRAP.TAPC_DUP_CLAIMS 
                  WHERE QUARTER_ID = ${quarter} 
                    AND MODEL_TYP_CD IN ('G', 'D','X')  

        ]]></command>

        <!-- load for GPO  -->
        <command type="run" datasource="gdxdb" transaction="false" queryTimeout="${TIMEOUT}" ><![CDATA[

                 INSERT INTO VRAP.TAPC_DUP_CLAIMS 
                        (      
                         QUARTER_ID,
                 CLAIM_ID ,
                 MODEL_TYP_CD,
                 HVST_ID,
                 ALLW_IN_APC  
                        )
                 SELECT ${quarter} AS QUARTER_ID,
                CLAIM_ID,
                'G' AS MODEL_TYP_CD,
                        HVST_ID,
                        CAST(NULL AS VARCHAR(1)) AS ALLW_IN_APC  
                   FROM VRAP.TAPC_CLAIMS_GPO
                  WHERE QUARTER_ID = ${quarter}
                    AND CLAIM_ID IN (
                                      SELECT CLAIM_ID
                                        FROM VRAP.TAPC_CLAIMS_DSC
                                       WHERE QUARTER_ID = ${quarter}
                                       UNION ALL
                                      SELECT CLAIM_ID
                                        FROM VRAP.TAPC_CLAIMS_XMD
                                       WHERE QUARTER_ID = ${quarter}
                                     )
                   WITH UR

        ]]></command>

        <!-- load for DSC  -->
        <command type="run" datasource="gdxdb" transaction="false" queryTimeout="${TIMEOUT}" ><![CDATA[

                 INSERT INTO VRAP.TAPC_DUP_CLAIMS
                        (
                         QUARTER_ID,
                         CLAIM_ID ,
                         MODEL_TYP_CD,
                         HVST_ID,
                         ALLW_IN_APC
                        )
                 SELECT ${quarter} AS QUARTER_ID,
                        CLAIM_ID,
                        'D' AS MODEL_TYP_CD,
                        HVST_ID,
                        CAST(NULL AS VARCHAR(1)) AS ALLW_IN_APC
                   FROM VRAP.TAPC_CLAIMS_DSC
                  WHERE QUARTER_ID = ${quarter}
                    AND CLAIM_ID IN (
                                      SELECT CLAIM_ID
                                        FROM VRAP.TAPC_CLAIMS_GPO
                                       WHERE QUARTER_ID = ${quarter}
                                       UNION ALL
                                      SELECT CLAIM_ID
                                        FROM VRAP.TAPC_CLAIMS_XMD
                                       WHERE QUARTER_ID = ${quarter}
                                     )
                   WITH UR

        ]]></command>

        <!-- load for XMD  -->
        <command type="run" datasource="gdxdb" transaction="false" queryTimeout="${TIMEOUT}" ><![CDATA[

                 INSERT INTO VRAP.TAPC_DUP_CLAIMS
                        (
                         QUARTER_ID,
                         CLAIM_ID ,
                         MODEL_TYP_CD,
                         HVST_ID,
                         ALLW_IN_APC
                        )
                 SELECT ${quarter} AS QUARTER_ID,
                        CLAIM_ID,
                        'X' AS MODEL_TYP_CD,
                        HVST_ID,
                        CAST(NULL AS VARCHAR(1)) AS ALLW_IN_APC
                   FROM VRAP.TAPC_CLAIMS_XMD
                  WHERE QUARTER_ID = ${quarter}
                    AND CLAIM_ID IN (
                                      SELECT CLAIM_ID
                                        FROM VRAP.TAPC_CLAIMS_GPO
                                       WHERE QUARTER_ID = ${quarter}
                                       UNION ALL
                                      SELECT CLAIM_ID
                                        FROM VRAP.TAPC_CLAIMS_DSC
                                       WHERE QUARTER_ID = ${quarter}
                                     )
                   WITH UR

        ]]></command>

        <!-- Start Update the GDX APC process status -->
        <!-- do not abend if this doesnt run properly -->
        <command type="run" datasource="gdxprd"><![CDATA[

            update VRAP.TAPC_QTR_PRCS_EVENT    
                SET END_TS = CURRENT TIMESTAMP
                   ,PRCS_STAT_TXT='Successful'    
                WHERE PRCS_ID = 100;

        ]]></command>
        <!-- End Update the GDX APC process status -->

        </try>
        <catch>

                <!-- Start Update the GDX APC process status -->
                <!-- do not abend if this doesnt run properly -->
                <command type="run" datasource="gdxprd"><![CDATA[

                    update VRAP.TAPC_QTR_PRCS_EVENT    
                        SET PRCS_ERR_TS = CURRENT TIMESTAMP
                           ,PRCS_STAT_TXT='Error-IT Investigating'    
                        WHERE PRCS_ID = 100;

                ]]></command>

       <!-- Send an email on error -->
                <command
                        type="mail"
                        mailTo="${email_address}"
                        mailFrom="GDX_build_apc_dup_claims_gdx@caremark.com"
                        subject="[${region}] [ERROR] Build APC Duplicate Claims within GDX"
                        contentType="text/html"
                        throwsException="false"
                ><![CDATA[
                        <html>
                        <head>
                        <title>[ERROR] Build APC Duplicate Claims within GDX</title>
                        </head>
                        <body>

                        <h3><u>[ERROR] Build APC Duplicate Claims within GDX</u></h3>

                        <table cellpadding="2">
                                <tr><td><b>Host:</b></td><td>${localhost}<td></tr>
                                <tr><td><b>Started:</b></td><td>${startTime}<td></tr>
                                <tr><td><b>Script:</b></td><td>${scriptName}<td></tr>
                                #if (${system.getProperty('logfile')})
                                        <tr>
                                                <td><b>Log File:</b></td>
                                                <td>
                                                        ${system.getProperty('logfile')}
                                                <td>
                                        </tr>
                                #end
                        </table>

                        <br>
                        <br>

                        #if (${script.getLastStatement()})
                                <h3><u>Last Statement</u></h3>
                                <font style="color: blue; font-size: small">
                                ${script.getLastStatement()}
                                </font>

                                <br>
                                <br>
                        #end

                        <h3><u>Stack Trace</u></h3>
                        <pre style="color: red; font-size: small;">${stackTrace}</pre>
                        </body>
                        </html>
                ]]></command>

        </catch>
        </command>
</sqml>

